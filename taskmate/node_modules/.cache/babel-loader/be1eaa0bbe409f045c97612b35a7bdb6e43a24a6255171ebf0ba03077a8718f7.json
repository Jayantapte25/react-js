{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayan\\\\OneDrive\\\\Documents\\\\React JS\\\\taskmate\\\\src\\\\components\\\\Tasklist.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { AddTaskModal } from './addTaskModal';\nimport { NotificationBox } from './NotificationBox';\nimport { TaskCard } from './TaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Tasklist = () => {\n  _s();\n  const [show, setShow] = React.useState(false);\n  const [tasks, setTasks] = React.useState([{\n    id: 1,\n    title: 'Task 1',\n    completed: true\n  }, {\n    id: 2,\n    title: 'Task 2',\n    completed: true\n  }, {\n    id: 3,\n    title: 'Task 3',\n    completed: false\n  }]);\n  const handleShow = () => setShow(true);\n  function deleteTask(id) {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n  ;\n  function addTasks() {}\n  function taskDone(id) {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          completed: task.completed ? false : true\n        };\n      }\n      return task;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleShow,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddTaskModal, {\n        show: show,\n        setShow: setShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: task,\n        deleteTask: deleteTask,\n        taskDone: taskDone\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(NotificationBox, {\n        type: \"success\",\n        title: \"Task List\",\n        description: \"This is a simple task list application.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NotificationBox, {\n        type: \"warning\",\n        title: \"Warning\",\n        description: \"This is a warning message.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasklist, \"+7sE5UAnMEDxwSHYz5iTEd+HGNo=\");\n_c = Tasklist;\nvar _c;\n$RefreshReg$(_c, \"Tasklist\");","map":{"version":3,"names":["React","Button","AddTaskModal","NotificationBox","TaskCard","jsxDEV","_jsxDEV","Tasklist","_s","show","setShow","useState","tasks","setTasks","id","title","completed","handleShow","deleteTask","filter","task","addTasks","taskDone","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","type","description","_c","$RefreshReg$"],"sources":["C:/Users/jayan/OneDrive/Documents/React JS/taskmate/src/components/Tasklist.js"],"sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { AddTaskModal } from './addTaskModal';\nimport { NotificationBox } from './NotificationBox';\nimport { TaskCard } from './TaskCard';\n\nexport const Tasklist = () => {\n    const [show, setShow] = React.useState(false);\n\n    const [tasks, setTasks] = React.useState([\n        { id: 1, title: 'Task 1', completed: true },\n        { id: 2, title: 'Task 2', completed: true },\n        { id: 3, title: 'Task 3', completed: false }\n    ]);\n\n    const handleShow = () => setShow(true);\n\n    function deleteTask(id) {\n        setTasks(tasks.filter((task) => task.id !== id));\n    };\n\n    function addTasks() {\n        \n    }\n\n    function taskDone(id) {\n        setTasks(tasks.map((task) => {\n            if (task.id === id) {\n                return { ...task, completed: task.completed ? false : true };\n            }\n            return task;\n        }));\n    }\n    return (\n        <div className=\"tasklist\">\n            <h1>Task List</h1>\n            <ul>\n                <Button variant=\"primary\" onClick={handleShow}>\n                    Add Task\n                </Button>\n                <AddTaskModal show={show} setShow={setShow} />\n                {tasks.map((task) => (\n                    <TaskCard key={task.id} task={task} deleteTask={deleteTask} taskDone={taskDone} />\n                ))}\n            </ul>\n\n            <div className=\"d-flex\">\n                <NotificationBox\n                    type=\"success\"\n                    title=\"Task List\"\n                    description=\"This is a simple task list application.\"\n                />\n                <NotificationBox\n                    type=\"warning\"\n                    title=\"Warning\"\n                    description=\"This is a warning message.\"\n                />\n            </div>\n        </div>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}